language:
  - cpp
compiler:
  - gcc

env:
  global:
    - ROS_DISTRO=hydro
#    - ROS_DISTRO=indigo
#  matrix:
#    - M3CORE_BUILD_TYPE=Debug
#    - M3CORE_BUILD_TYPE=Release


before_install: # Use this to prepare the system to install prerequisites or dependencies
  #- export ROS_DISTRO=hydro
  # Define some config vars
  - export CI_SOURCE_PATH=$(pwd)
  - export REPOSITORY_NAME=${PWD##*/}
  - codename=`cat /etc/lsb-release | grep -m 1 "DISTRIB_CODENAME=" | cut -d "=" -f2`
  - sudo sh -c "echo 'deb http://packages.ros.org/ros/ubuntu $codename main' > /etc/apt/sources.list.d/ros-latest.list"
  - wget http://packages.ros.org/ros.key -O - | sudo apt-key add -
  - sudo apt-get update
  - sudo apt-get install -qq -y python-catkin-pkg python-rosdep python-wstool ros-$ROS_DISTRO-catkin ros-$ROS_DISTRO-ros
  # MongoDB hack - I don't fully understand this but its for moveit_warehouse
  - sudo apt-get remove -y mongodb mongodb-10gen
  - sudo apt-get install -y mongodb-clients mongodb-server -o Dpkg::Options::="--force-confdef" # default actions
install: # Use this to install any prerequisites or dependencies necessary to run your build
  # Create workspace
  - sudo apt-get install ros-$ROS_DISTRO-desktop-full
  # Create workspace
  - mkdir -p ~/ros/ws_moveit/src
  - cd ~/ros/ws_moveit/src
  - wstool init .
  # Download non-debian stuff
  - wstool merge https://raw.github.com/ros-planning/moveit_docs/hydro-devel/moveit.rosinstall
  - wstool update
  # Delete the moveit.rosinstall version of this repo and use the one of the branch we are testing
  - ln -s $CI_SOURCE_PATH . # Link the repo we are testing to the new workspace
  - cd ../
  # Install dependencies for source repos
  - rosdep install --from-paths src --ignore-src --rosdistro $ROS_DISTRO -y

before_script: # Use this to prepare your build for testing e.g. copy database configurations, environment variables, etc.
  - sudo rosdep init
  - rosdep update
  - source /opt/ros/$ROS_DISTRO/setup.bash
  ## Create the ROS-workspace
  - mkdir -p ~/catkin_ws/src
  - export REPOSITORY_NAME=${PWD##*/}
  - ln -s $(pwd) ~/catkin_ws/src/$REPOSITORY_NAME
  - cd ~/catkin_ws/src
  - catkin_init_workspace

script: # All commands must exit with code 0 on success. Anything else is considered failure.
  - cd ~/catkin_ws/
  - catkin_make
